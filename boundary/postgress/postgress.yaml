global:
  storageClass: longhorn
architecture: "replication"
primary:
  persistence:
    size: 2048Mi
  podAnnotations:
    consul.hashicorp.com/connect-inject: "true"
    consul.hashicorp.com/connect-service: "postgress-postgresql-primary"
    consul.hashicorp.com/connect-service-port: "5432"
    consul.hashicorp.com/transparent-proxy: "true"
  

replica:
  replicaCount: 1
  persistence:
    size: 2048Mi


auth:
  existingSecret: postpwd


replication:
  enabled: true
tls:
  ## @param tls.enabled Enable TLS traffic support
  ##
  enabled: false
  ## @param tls.autoGenerated Generate automatically self-signed TLS certificates
  ##
  ## @param tls.preferServerCiphers Whether to use the server's TLS cipher preferences rather than the client's
  certificatesSecret: "boundary-certificates-tls-secret"
  ## @param tls.certFilename Certificate filename
  ##
  certFilename: "postgres.pem"
  ## @param tls.certKeyFilename Certificate key filename
  ##
  certKeyFilename: "boundary.key"
  ## @param tls.certCAFilename CA Certificate filename
  ## If provided, PostgreSQL will authenticate TLS/SSL clients by requesting them a certificate
  ## ref: https://www.postgresql.org/docs/9.6/auth-methods.html

